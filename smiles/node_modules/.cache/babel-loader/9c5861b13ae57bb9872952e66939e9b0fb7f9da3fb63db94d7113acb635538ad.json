{"ast":null,"code":"var _jsxFileName = \"C:\\\\HILLEL\\\\HILLEL-IT-SCHOOL\\\\Front End Advance\\\\react\\\\smiles\\\\src\\\\EmojiVoting.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmojiVotingApp = () => {\n  _s();\n  const [emojis, setEmojis] = useState(() => {\n    // Get emojis from local storage, or use default emojis with count set to 0\n    const storedEmojis = localStorage.getItem(\"emojis\");\n    if (storedEmojis) {\n      return JSON.parse(storedEmojis);\n    } else {\n      return [{\n        emoji: \"😃\",\n        count: 0\n      }, {\n        emoji: \"😍\",\n        count: 0\n      }, {\n        emoji: \"😂\",\n        count: 0\n      }\n      // Add more emojis here\n      ];\n    }\n  });\n\n  useEffect(() => {\n    // Update local storage with current emojis whenever emojis change\n    localStorage.setItem(\"emojis\", JSON.stringify(emojis));\n  }, [emojis]);\n  const handleEmojiClick = index => {\n    const updatedEmojis = [...emojis];\n    updatedEmojis[index].count += 1;\n    setEmojis(updatedEmojis);\n  };\n  const handleShowResultsClick = () => {\n    const winningEmoji = emojis.reduce((prev, current) => prev.count > current.count ? prev : current);\n    alert(`The winning emoji is: ${winningEmoji.emoji}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Emoji Voting App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: emojis.map((emoji, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: emoji.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [emoji.count, \" clicks\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEmojiClick(index),\n          children: \"Vote\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowResultsClick,\n      children: \"Show Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(EmojiVotingApp, \"Gu4oPupGDmCLrtYR2mQhzTrNhe4=\");\n_c = EmojiVotingApp;\nexport default EmojiVotingApp;\nvar _c;\n$RefreshReg$(_c, \"EmojiVotingApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EmojiVotingApp","_s","emojis","setEmojis","storedEmojis","localStorage","getItem","JSON","parse","emoji","count","setItem","stringify","handleEmojiClick","index","updatedEmojis","handleShowResultsClick","winningEmoji","reduce","prev","current","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["C:/HILLEL/HILLEL-IT-SCHOOL/Front End Advance/react/smiles/src/EmojiVoting.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst EmojiVotingApp = () => {\r\n  const [emojis, setEmojis] = useState(() => {\r\n    // Get emojis from local storage, or use default emojis with count set to 0\r\n    const storedEmojis = localStorage.getItem(\"emojis\");\r\n    if (storedEmojis) {\r\n      return JSON.parse(storedEmojis);\r\n    } else {\r\n      return [\r\n        { emoji: \"😃\", count: 0 },\r\n        { emoji: \"😍\", count: 0 },\r\n        { emoji: \"😂\", count: 0 },\r\n        // Add more emojis here\r\n      ];\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Update local storage with current emojis whenever emojis change\r\n    localStorage.setItem(\"emojis\", JSON.stringify(emojis));\r\n  }, [emojis]);\r\n\r\n  const handleEmojiClick = (index) => {\r\n    const updatedEmojis = [...emojis];\r\n    updatedEmojis[index].count += 1;\r\n    setEmojis(updatedEmojis);\r\n  };\r\n\r\n  const handleShowResultsClick = () => {\r\n    const winningEmoji = emojis.reduce((prev, current) =>\r\n      prev.count > current.count ? prev : current\r\n    );\r\n    alert(`The winning emoji is: ${winningEmoji.emoji}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Emoji Voting App</h1>\r\n      <ul>\r\n        {emojis.map((emoji, index) => (\r\n          <li key={index}>\r\n            <span>{emoji.emoji}</span>\r\n            <p>{emoji.count} clicks</p>\r\n            <button onClick={() => handleEmojiClick(index)}>Vote</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={handleShowResultsClick}>Show Results</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmojiVotingApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}